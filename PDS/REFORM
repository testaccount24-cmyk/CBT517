REFM     TITLE '      PROGRAM TO REFORMAT XPLSM PROGRAM FILES '
         SPACE 5
***********************************************************************
*                                                                     *
*                                                                     *
*                                                                     *
*              THIS PROGRAM REFORMATS PROGRAM FILE GENERATED BY THE   *
*              XCOM COMPILER TO ALLOW PROGRAM LOADING FROM DIFFERENT  *
*              DIRECT ACCESS DEVICES.  ONE ADVATNTAGE IS THE          *
*              POSSIBILITY OF USING EXTREMELY FAST DEVICES SUCH AS    *
*              2301 DRUMS FOR COMPILER RESIDENCE WHILE USING SMALL    *
*              SLOW DISKS LIKE 2311'S FOR SCRATCH DURING THE COMPILER *
*              GENERATION PROCESS.                                    *
*                                                                     *
*              THE PRINCIPLE EFFECT OF THIS PROGRAM IS TO COPY A      *
*              STANDARD FORMAT FILE FROM THE DATASET 'SYSUT1' TO THE  *
*              DATASET 'SYSUT2'.  THE DD CARDS FOR BOTH DATA SETS     *
*              MUST SPECIFY  RECORD LENGTH AND RECORD FORMAT          *
*                                                                     *
*                                                                     *
*              A SIDE EFFECT OF THIS PROGRAM IS TO REBUILD THE FILE   *
*              CONTROL INFORMATION WHICH IS AT THE HEAD OF THE        *
*              PROGRAM FILE.                                          *
*                                                                     *
*                                                                     *
*                                      DAVID B. WORTMAN               *
*                                      STANFORD UNIVERSITY            *
*                                      MARCH  1969                    *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
         SPACE 5
REFORM   CSECT               ENTRY POINT
         USING *,15
         SPACE 1
REFORMAT SAVE  (14,12),T,*   SAVE REGISTERS
         ST    13,SAVE+4
         LA    15,SAVE
         ST    15,8(,13)
         LR    13,15
         USING SAVE,13
         DROP  15
         B     BEGIN
         SPACE 5
SAVE     DC    18F'0'        OS SAVE AREA
         EJECT
         SPACE 5
***********************************************************************
*                                                                     *
*              HEX TO EBCDIC  CONVERSION  ROUTINE                     *
*                                                                     *
***********************************************************************
         SPACE 2
         USING *,15
HEXTOEBC ST    0,HEXTABLE+16
         L     1,HEXTABLE-4
         UNPK  HEXTABLE+16(9),HEXTABLE+16(5)
         TR    HEXTABLE+16(8),0(1)
         LM    0,1,HEXTABLE+16
         BR    14
         DROP  15
         DC    A(HEXTABLE-240)
HEXTABLE DC    CL25'0123456789ABCDEF'
         EJECT
         SPACE 5
***********************************************************************
*                                                                     *
*                                                                     *
*              PRIMITIVE ERROR  ROUTINES                              *
*                                                                     *
*                                                                     *
*              ABEND  CODES  ISSUED  IN THE EVENT OF ERRORS           *
*                                                                     *
*        100   EOD ERROR ON SYSUT1                                    *
*                                                                     *
*        200   SYNAD ERROR ON SYSUT1                                  *
*                                                                     *
*        300   SYNAD ERROR ON SYSUT2                                  *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 2
EODUT1   STM   0,15,ABEREGS  SAVE ALL REGISTERS
         ABEND 100,DUMP
         SPACE 2
SYNDUT1  STM   0,15,ABEREGS  SAVE ALL REGISTERS
         ABEND 200,DUMP
         SPACE 2
SYNDUT2  STM   0,15,ABEREGS  SAVE ALL REGISTERS
         ABEND 300,DUMP
         EJECT
         SPACE 5
***********************************************************************
*                                                                     *
*              ROUTINE TO PRINT THE FILE CONTROL BLOCKS IN HEX        *
*                                                                     *
***********************************************************************
         SPACE 2
PCTRL    ST    14,PSV
         L     15,AHEX
         L     2,ACORE
         USING FILECTRL,2
         L     0,BYTSCODE
         BALR  14,15
         STM   0,1,CT1
         L     0,BYTSDATA
         BALR  14,15
         STM   0,1,CT2
         L     0,BLKSCODE
         BALR  14,15
         STM   0,1,CT3
         L     0,BLKSDATA
         BALR  14,15
         STM   0,1,CT4
         L     0,BYTSBLK
         BALR  14,15
         STM   0,1,CT5
         L     0,BYTSFULL
         BALR  14,15
         STM   0,1,CT6
         L     0,DATABYTS
         BALR  14,15
         STM   0,1,CT7
         DROP  2
         SPACE 1
         PUT   SYSPRINT,CMSG
         L   14,PSV
         BR    14
*
         EJECT
         SPACE 5
***********************************************************************
*                                                                     *
*                                                                     *
*              BEGIN EXECUTION HERE BY OPENING ALL FILES AND          *
*              OBTAINING AS MUCH CORE AS POSSIBLE FOR A WORK          *
*              AREA.                                                  *
*                                                                     *
***********************************************************************
         SPACE 2
BEGIN    OPEN  (SYSUT1,(INPUT),SYSUT2,(OUTPUT),SYSPRINT,(OUTPUT))
         SPACE 1
         GETMAIN VU,LA=COREREQ,A=ACORE
         SPACE 1
         LM    1,2,ACORE
         AR    1,2
         S     1,F4096
         ST    1,CORETOP
         S     2,F4096
         ST    2,CORESIZE
         L     0,F4096
         SPACE 1
         FREEMAIN R,LV=(0),A=(1)  GIVE OS BACK SOME CORE TO WORK WITH
         EJECT
         SPACE 5
***********************************************************************
*                                                                     *
*                                                                     *
*              READ IN THE CODE BLOCKS OF THE BINARY XPL PROGRAM      *
*              ON SYSUT1                                              *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 2
         L     2,ACORE       BUFFER ADDRESS
         LR    8,2           SAVE ADDRESS
         USING FILECTRL,8
         SPACE 1
         READ  DECB1,SF,SYSUT1,(2),'S'  READ IN 1ST BLOCK OF CODE
         SPACE 1
         CHECK DECB1
         SPACE 1
         MVC   CTP(3),OLDM
         BAL   14,PCTRL
         L     5,BLKSCODE    NUMBER OF BLOCKS OF CODE
         L     3,BYTSBLK     BLOCK SIZE
         BCT   5,RD1         READ MORE CODE BLOCKS IF ANY
         B     CODEIN        ONLY ONE BLOCK
         SPACE 1
RD1      AR    2,3
         SPACE 1
RCODE    READ  DECB1,SF,,(2),,MF=E
         SPACE 1
         CHECK DECB1
         SPACE 1
         AR    2,3
         BCT   5,RCODE
         SR    2,3
         SPACE 1
CODEIN   A     2,BYTSFULL
         ST    2,DATADR
         EJECT
         SPACE 5
***********************************************************************
*                                                                     *
*              COMPUTE THE NEW FILE CONTROL BLOCK                     *
*                                                                     *
***********************************************************************
         SPACE 2
         MVC   OLDDBL(4),BLKSDATA
         MVC   OLDBBL(4),BYTSBLK   SAVE PARTS OF OLD BLOCK
         LA    7,SYSUT2
         USING IHADCB,7
         MVC   BYTSBLK+2(2),DCBLRECL   MOVE IN BLOCK SIZE
         L     0,BYTSCODE    NUMBER OF BYTES OF CODE
         S     0,OLDBBL      -BLOCK_SIZE
         A     0,BYTSFULL    +BYTES IN LAST BLOCK
         SRDA  0,32
         D     0,BYTSBLK     COMPUTE NEW NUMBER OF BLOCKS
         LTR   0,0
         BZ    LD1A
         LA    1,1(,1)
         B     LD1B
LD1A     L     0,BYTSBLK
LD1B     ST    0,BYTSFULL
         ST    1,BLKSCODE
         SR    0,0
         M     0,BYTSBLK
         ST    1,BYTSCODE
         L     0,BYTSDATA
         S     0,DATABYTS    - BLOCK_SIZE
         A     0,DATABYTS    + BYTES IN LAST BLOCK
         SRDA  0,32
         D     0,BYTSBLK
         LTR   0,0
         BZ    LD2A
         LA    1,1(,1)
         B     LD2B
LD2A     L     0,BYTSBLK
LD2B     ST    0,DATABYTS     # OF BYTES USED IN LAST DATA BLOCK
         ST    1,BLKSDATA
         SR    0,0
         M     0,BYTSBLK
         ST    1,BYTSDATA
         MVC   NEWBBL(4),BYTSBLK
         MVC   NEWDBL(4),BLKSDATA
         EJECT
         SPACE 5
***********************************************************************
*                                                                     *
*              WRITE OUT THE CODE BLOCKS IN THE NEW FORMAT            *
*                                                                     *
***********************************************************************
         SPACE 2
         MVC   CTP(3),NEWM
         BAL   14,PCTRL
         SPACE 1
         L     2,ACORE
         L     3,NEWBBL
         L     5,BLKSCODE
         SPACE 1
WCODE    WRITE DECB2,SF,SYSUT2,(2),'S'
         SPACE 1
         CHECK DECB2
         AR    2,3
         BCT   5,WCODE
         SPACE 1
         L     5,OLDDBL      NUMBER OF BLOCKS ON SYSUT1
         L     2,ACORE
         L     3,OLDBBL      BLOCKSIZE ON SYSUT1
         SPACE 1
***********************************************************************
*                                                                     *
*              READ IN THE DATA BLOCKS FOR THE XPL BINARY             *
*              PROGRAM ON SYSUT1                                      *
*                                                                     *
***********************************************************************
         SPACE 1
RDATA    READ  DECB1,SF,,(2),,MF=E
         SPACE 1
         CHECK DECB1
         SPACE 1
         AR    2,3
         BCT   5,RDATA
         SPACE 1
***********************************************************************
*                                                                     *
*              WRITE OUT THE DATA BLOCKS IN THE NEW FORMAT            *
*                                                                     *
***********************************************************************
         SPACE 1
         L     2,ACORE
         L     3,NEWBBL
         L     5,NEWDBL
         SPACE 1
WDATA    WRITE DECB2,SF,,(2),,MF=E
         SPACE 1
         CHECK DECB2
         SPACE 1
         AR    2,3
         BCT   5,WDATA
         SPACE 2
***********************************************************************
*                                                                     *
*              FREE MEMORY, CLOSE ALL FILES AND RETURN TO OS/360      *
*                                                                     *
***********************************************************************
         SPACE 2
         L     1,ACORE
         L     0,CORESIZE
         FREEMAIN R,LV=(0),A=(1)   GIVE CORE BACK TO OS
         SPACE 1
         PUT   SYSPRINT,DONEM
         SPACE 1
         CLOSE (SYSUT1,,SYSUT2,,SYSPRINT,)
         SPACE 1
         L     13,SAVE+4
         RETURN (14,12)
         EJECT
         SPACE 5
***********************************************************************
*                                                                     *
*              DATA AREA                                              *
*                                                                     *
***********************************************************************
         SPACE 2
COREREQ  DC    F'65768'      MINIMUM CORE REQUEST
         DC    F'1000000'    MAXIMUM CORE REQUESTED
ACORE    DC    F'0'          ADDRESS OF CORE OBTAINED HERE
CORESIZE DC    F'0'
CORETOP  DC    F'0'
DATADR   DC    F'0'
F4096    DC    F'4096'
OLDBBL   DC    F'0'
OLDDBL   DC    F'0'
NEWBBL   DC    F'0'
NEWDBL   DC    F'0'
AHEX     DC    A(HEXTOEBC)
ABEREGS  DS    16F           SAVE REGISTERS HERE BEFORE ABENDING
         PRINT NOGEN
         DS    0F
CMSG     DC    CL132'    XXX  FILE  CONTROL  BLOCK'
CTP      EQU   CMSG+4
CT1      EQU   CMSG+36
CT2      EQU   CMSG+48
CT3      EQU   CMSG+60
CT4      EQU   CMSG+72
CT5      EQU   CMSG+84
CT6      EQU   CMSG+96
CT7      EQU   CMSG+108
DONEM    DC    CL132'    UTILITY  END'
NEWM     DC    CL3'NEW'
OLDM     DC    CL3'OLD'
PSV      DC    F'0'
         SPACE 2
***********************************************************************
*                                                                     *
*                                                                     *
*              DATA  CONTROL  BLOCKS  FOR  SYSUT1  AND  SYSUT2        *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 2
SYSUT1   DCB   DSORG=PS,                                               X
               MACRF=R,                                                X
               DDNAME=SYSUT1,                                          X
               DEVD=DA,                                                X
               EODAD=EODUT1,                                           X
               SYNAD=SYNDUT1
         SPACE 2
SYSUT2   DCB   DSORG=PS,                                               X
               MACRF=W,                                                X
               DDNAME=SYSUT2,                                          X
               DEVD=DA,                                                X
               SYNAD=SYNDUT2
         SPACE 2
SYSPRINT DCB   DSORG=PS,                                               X
               DEVD=DA,                                                X
               DDNAME=SYSPRINT,                                        X
               MACRF=PM,                                               X
               RECFM=FA,                                               X
               LRECL=133,                                              X
               BUFNO=2
         EJECT
         SPACE 5
***********************************************************************
*                                                                     *
*              DSECT WHICH DEFINES THE FORMAT OF THE FILE CONTROL     *
*              BLOCK WHICH IS AT THE HEAD OF ALL XPL PROGRAMS         *
*                                                                     *
***********************************************************************
         SPACE 2
FILECTRL DSECT
         SPACE 1
BYTSCODE DS    1F            NUMBER OF BYTES OF CODE
         SPACE 1
BYTSDATA DS    1F            NUMBER OF BYTES OF DATA
         SPACE 1
BLKSCODE DS    1F            NUMBER OF BLOCKS OF CODE
         SPACE 1
BLKSDATA DS    1F            NUMBER OF BLOCKS OF DATA
         SPACE 1
BYTSBLK  DS    1F            BLOCK LENGTH IN BYTES
         SPACE 1
BYTSFULL DS    1F            NUMBER OF BYTES ACTUALLY USED IN THE LAST
*                            BLOCK OF CODE
         SPACE 1
DATABYTS DS    1F            NUMBER OF BYTES ACTUALLY USED IN THE LAST
*                            BLOCK OF DATA
         SPACE 5
         DCBD  DSORG=LR      DCBLRECL  ONLY
         SPACE 5
         END
